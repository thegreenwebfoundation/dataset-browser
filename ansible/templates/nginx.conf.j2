# {{ ansible_managed }}
# Last run: {{ template_run_date }}


upstream {{ tgwf_domain_name }} {
    server localhost:{{ app_port }};
}

server {
    listen 443 ssl; # managed by Certbot
    server_name {{ tgwf_domain_name }}.thegreenwebfoundation.org;

    access_log /var/log/nginx/{{ tgwf_domain_name }}.thegreenwebfoundation.org-access.log;
    error_log /var/log/nginx/{{ tgwf_domain_name }}.thegreenwebfoundation.org-error.log;

    ssl_certificate /etc/letsencrypt/live/{{ tgwf_domain_name }}.thegreenwebfoundation.org/fullchain.pem;  # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{{ tgwf_domain_name }}.thegreenwebfoundation.org/privkey.pem; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    keepalive_timeout 5;

    # for batch API checks we can end up with large files being
    # uploaded/downloaded. Adding this gives support, and stops
    # the Nginx 413 Request Entity Too Large error
    client_max_body_size 128M;

    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    location @proxy_to_app {
        proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header           X-Forwarded-Proto $scheme;
		proxy_set_header           Host $host;
		#                          we don't want nginx trying to do something clever with
		#                          redirects, we set the Host: header above already.
		proxy_redirect             off;
        proxy_pass http://{{ tgwf_domain_name }};
    }

}

server {
    if ($host = {{ tgwf_domain_name }}.thegreenwebfoundation.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen {{ ansible_default_ipv4.address }}:80;
    server_name {{ tgwf_domain_name }}.thegreenwebfoundation.org;
    return 404; # managed by Certbot
}

